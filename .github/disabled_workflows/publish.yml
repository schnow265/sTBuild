name: Publish Module

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (leave empty to use GitVersion)'
        required: false
        default: ''

jobs:
  publish:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Required for GitVersion to work properly
      
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      
      - name: Install GitVersion
        shell: pwsh
        run: |
          dotnet tool install --global GitVersion.Tool
          dotnet-gitversion /version
      
      - name: Setup PowerShell Gallery publishing
        shell: pwsh
        run: |
          $apiKey = $env:PS_GALLERY_API_KEY
          if ([string]::IsNullOrEmpty($apiKey)) {
            Write-Error "PS_GALLERY_API_KEY is not set"
            exit 1
          }
          
          Install-Module -Name PowerShellGet -Force -SkipPublisherCheck
          New-Item -Path "$HOME/.config/powershell" -ItemType Directory -Force
          $profileContent = @"
          `$PSGalleryPublishingKey = '$apiKey'
          `$PSGalleryApiKey = '$apiKey'
          "@
          $profileContent | Out-File -FilePath "$HOME/.config/powershell/profile.ps1" -Force
        env:
          PS_GALLERY_API_KEY: ${{ secrets.PS_GALLERY_API_KEY }}
      
      - name: Update Module Version
        shell: pwsh
        run: |
          $manualVersion = "${{ github.event.inputs.version }}"
          $manifestPath = "sTBuild.psd1"
          
          if (-not [string]::IsNullOrWhiteSpace($manualVersion)) {
            if ($manualVersion -match '^\d+\.\d+\.\d+(\.\d+)?$') {
              $manifestContent = Get-Content -Path $manifestPath -Raw
              $updatedContent = $manifestContent -replace "ModuleVersion = '(\d+\.\d+\.\d+(\.\d+)?)'", "ModuleVersion = '$manualVersion'"
              $updatedContent | Out-File -FilePath $manifestPath -Force
              Write-Host "Updated module version to $manualVersion (manually specified)"
            } else {
              Write-Error "Invalid version format: $manualVersion. Use format like 1.0.0 or 1.0.0.0"
              exit 1
            }
          } else {
            # Get version from GitVersion
            $versionInfo = dotnet-gitversion | ConvertFrom-Json
            $moduleVersion = $versionInfo.MajorMinorPatch
            
            $manifestContent = Get-Content -Path $manifestPath -Raw
            $updatedContent = $manifestContent -replace "ModuleVersion = '(\d+\.\d+\.\d+(\.\d+)?)'", "ModuleVersion = '$moduleVersion'"
            $updatedContent | Out-File -FilePath $manifestPath -Force
            
            Write-Host "Updated module version to $moduleVersion (from GitVersion)"
          }
      
      - name: Publish Module to PowerShell Gallery
        shell: pwsh
        run: |
          . "$HOME/.config/powershell/profile.ps1"
          Publish-Module -Path . -NuGetApiKey $PSGalleryApiKey -Verbose
